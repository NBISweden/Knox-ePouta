#!/usr/bin/env bash

# Get credentials 
_CREDENTIALS=$(dirname ${BASH_SOURCE[0]})/knox.rc

if [ -f ${_CREDENTIALS} ]; then
    # Adding the knox variables to the environment
    source ${_CREDENTIALS}
    # Note: this includes some rudimentary checks
    # And the definition of the ke_boot_machine function
else
    echo "ERROR: Cloud credentials not found [${_CREDENTIALS}]"
    exit 1;
fi


# Checking if the user is admin for that tenant
CHECK=$(openstack role assignment list --user ${OS_USERNAME} --role admin --project ${OS_TENANT_NAME})
if [ $? -ne 0 ] || [ -z "$CHECK" ]; then
    echo "ERROR: $CHECK"
    echo -e "\nThe user ${OS_USERNAME} does not seem to have the 'admin' role for the project ${OS_TENANT_NAME}"
    echo "Exiting..."
    exit 1
fi

# Testing if the management net is found
MGMT_NET=$(neutron net-list --tenant_id=${TENANT_ID} | awk "/ ${OS_TENANT_NAME}-mgmt-net /{print \$2}")
[ -z "$MGMT_NET" ] && echo "Error: Could not find the Management" && exit 1

# For the phone home server
_PORT=12345
declare -A KNOX_FLAVORS=(\
    [supernode]=m1.small \
    [knox1]=m1.large \
    [knox2]=m1.large \
    [knox3]=m1.large \
    [storage]=mm.storage \
)

# Declaring a function to be used in the init script
function ke_boot_machine {
    local machine=$1
    local _IP=$2
    local _IMAGE=$3
    local _VM_INIT=$4
    local _FLAVOR=${KNOX_FLAVORS[$machine]}

    echo -e "\t* $machine"
    nova boot --flavor ${_FLAVOR} --image ${_IMAGE} --security-groups default,${OS_TENANT_NAME}-sg --nic net-id=${MGMT_NET},v4-fixed-ip=${_IP} --user-data ${_VM_INIT} $machine &>/dev/null

}
